# syntax=docker/dockerfile:1.4
FROM python:3.12.7-slim-bookworm AS base
COPY --from=ghcr.io/astral-sh/uv:0.5.4 /uv /uvx /bin/

# Suppress interactive prompts and set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    PYTHONUNBUFFERED=1 \
    KFP_VERTEX_CONTAINER=true

# Install system dependencies and clean up in one layer
RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && \
    apt-get install --no-install-recommends -y \
    gcc \
    jq && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy project files
COPY uv.lock pyproject.toml README.md ./

# Update the project's environment
RUN --mount=type=cache,target=/Users/$USER/Library/Caches/uv \
    uv sync --frozen --no-dev --no-install-project --link-mode=copy

FROM base AS local
# Use staged build to only do this locally: inject user's ACCESS_TOKEN into json file
ARG ADC
RUN echo "$ADC" > /root/application_default_credentials.json
ENV GOOGLE_APPLICATION_CREDENTIALS=/root/application_default_credentials.json \
    GOOGLE_CLOUD_PROJECT=MY_GCP_PROJECT
